TODO
----

- make the admin scripts so that deps can make changes and changes are
committed to the log and the owner of the object is changed appropriately.
- Add 'plurals' to the items. (bucket -> buckets)
- logging is split up into the different characters. This makes it easier to
debug in a production environment.
- remove gold,silver from mm_usertable, mm_items,only use copper as a
flat-base value.
- boards
- add %SLONG, %TLONG
- fighting
- inserts and deletes of items/rooms/methods/commands/events
- insert/change/delete attributes
- search something
- check that the stream has not ended in MudSocket, it will return a null
pointer. ugly.
- setAttribute+removeAttribute should submit information to the database.
BUT NOT FOR ItemDefs!

- open something/close something
- look <IN> object
- lock something/unlock something
- check that a person does not wield more than one thing.

- events:
  openevent(person, item)
	- occurrs when item is successfully opened by a person
	- methodname found in attribute "openevent"
	- refers to source code in methods table
	- attribute available in item
  closeevent(person, item)
	- occurrs when item is successfully closed by a person
	- methodname found in attribute "closeevent"
	- refers to source code in methods table
	- attribute available in item
  receiveitemevent(person, person, item)
  enterevent(person, room)
  leaveevent(person, room)
- check if an object is being wielded.
- IMPORTANT! If any one command/event/method is generating an exception,
make certain that it it removed from the list of executable commands, and that
the "callable" field in the database is deactivated.
- add 'fight' and 'stop fighting' commands to the help.

Items
-----

The following kind of items are possible:
- DRINK
- FOOD
- ARMOUR
- WEAPON
- JEWELRY
- GUILDITEM
- MAGICITEM
- NORMAL
- CONTAINER
- SHOPKEERPITEM

An Item has a getter "isSellable" containing most of the logic about wehter
or not an item is sellable.

Creating Items
--------------

Items should be able to be created by combining any number of <I>other</I>
items.

Containers
----------

Containers are special items that can contain other items. Containers, teh
same as normal items have a ItemDefinition, have an ContainerDefinition. It
contains, besides the usual stuff of ItemDefinition, specific default
behaviour about the containers.

The ItemDefinition determines if an item is a container or not.
It does this in a variety of ways. First of all, if the 'container' field is
set to 'yes', the item is a container, capable of containing other items.

If the 'isopenable' field is set to 'yes' the container can be opened and
closed.

if the 'keyid' field is set to a VALID itemdefinition, an item of that
definition is to be used to lock or unlock the container.

As this means that a container has a varying number of states, attributes
are used per container:

name: islocked value: false value_type: boolean
name: isopen value: true value_type: boolean
name: isopenable value: true value_type: boolean

A container cannot contain a non-empty container. We are not going to have
infinite-level-depth containers. That way madness lies.

Guilds
-----

A. Below text issues the following commands:
V guildapply GUILDNAME
- (BOSS) guildqual MINGUILDLEVEL
V guilddetails
V (BOSS) guildaccept USERNAME
V (BOSS) guildreject USERNAME
V (BOSS) guildassign USERNAME "RANK"
V (BOSS) guildaddrank "RANKID" "RANK DESC"
V (BOSS) guilddelrank "RANKID"
- (BOSS) guildexile USERNAME, REASON
V (BOSS) guildremove USERNAME
V guildleave
- (BOSS) guildrefresh

V (BOSS) guilddescription
V (BOSS) guildtitle
V (BOSS) guildurl
- (BOSS) guildlevel

V (BOSS) guildmessage LOGONMESSSAGE
V guild MESSAGE
- guildhome
- guilddonate
- admin guildhomeset

Need to check the following into Database.java:
- check Attribute on mm_charattributes
- check guildname on mm_usertable
- remove Attribute from mm_charattributes
- set guildname in mm_usertable
This is only required for the follwoing commands:
V (BOSS) guildaccept USERNAME
V (BOSS) guildreject USERNAME

mm_guilds
* name
  title -> userdefined
  daysguilddeath
  maxguilddeath
  minguildmembers
  minguildlevel -> userdefined
  guilddescription -> userdefined
  guildurl => userdefined
  bossname
  active
  creation
  owner
  logonmessage text -> new
mm_charattributes
name: guildrank
value: 20
value_type: integer
charname: Karn
mm_guildranks
* name
  title
  guildlevel -> 1=bottom rung, 100=top rung=automatic BOSS
* guildname
First, you need to use the guildcreate command to create a new guild. You
have to get at least MINGUILDMEMBERS amount of new members before it will
activate you (Set in the INI file). Activation means you will be visible in
the listing, can buy land for the guild, can have guild bank accounts, and can
hire mobs, as well as have politics with others.

Once you've made your guild, people can 'guildapply' to the guild. Of course,
the person has to be at least level MINGUILDLEVEL (Set in the INI file).
'guildapply' can be done even if you're the only one online. Clan bosses can
set qualifications to the guild with the 'guildqual' command and both bosses
and leaders will see new applicants in their 'guilddetails' screen, at which
point, they can 'guildaccept' or 'guildreject' the player (regardless of
online status). Clan bosses can also 'guildassign' people roles, such as
treasurer, leader, or even boss. Clan bosses and leaders may, at any time,
'guildexile' a member - as well as members can 'guildresign'

Once you're accepted into a guild, you can use the guildtalk channel to talk
to your guild, as well as use the 'Clan Home' and 'Clan Donate' spells. The
'guildhome' location can be set by bosses using
the 'guildhomeset' commands. Bosses and treasurers may
deal with any Clan bankers in your game. If MINGUILDMEMBERS don't at least
login in DAYSGUILDDEATH days, then the guild will be purged automatically. 
http://www.turf.org/helps/

GUILDITEMS=> a guild should have special items, that can only be shared/used
among guildmembers. Changes from guild to another guild automatically destroy
guilditems or something.

Shopkeepers
-----------

Shopkeepers buy and sell items. Some shopkeepers will only allow selling and
buying of specific items. 
Shopkeepers have a finite amount of money, when the money runs out, the
shopkeeper will not buy items.
If an item does not appear in the list of buyable/sellable items, it will
not be sold/bought.
You can only buy items that the shopkeepers has in his/her inventory.

Issue: how do I determine what a shopkeeper has for sale at the moment.
answer: special item? in database with special attribute? A sort of "View"
item.

Issue: how do I determine how much a shopkeeper is willing to give for a
certain item?
answer: show item

Current commands for shopkeepers:
buy <item> from <shopkeeper>
sell <item> to <shopkeeper>
show <item> to <shopkeeper>

Money
-----

V remove gold,silver from mm_usertable. Keep copper for use as a base-value
for the amount of money someone has.
V remove gold, silver from mm_items. Keep copper for use as a base-value
for the amount of money someone has.
Money is not an Item unless it is part of a room/item.
When retrieving money from a room/corpse => moneybag, moneypouch, coinbag
There is never any loose change.
- a Room does not contain coins, a room contains moneybags.
V There is never 10 silver coins, it is always 1 gold
V There is never 10 copper coins, it is always 1 silver
V Fortune 500 list
- Ziektekostenverzekering
- een Baan (blacksmith, fisherman)

impacts the following objects:
- SellCommand
- BuyCommand
- DropCommand
- GetCommand
- PutCommand
- RetrieveCommand
- Database
- Person
- Item
- Room

Menders
-------

Items have, for each, a 'condition', for example: mint condition, perfect
condition, bad shape, worse.
Itemdefs define a 'maxcondition', which is by default a maximum of 28*6=168
days. (a little less than half a year).
Items that are newly created automatically have the maximum condition.
Every day, the items deteriorate a little (crontab?).
When deterioration reaches zero, the item is disintegrated!
Items can be repaired, bringing their condition back to 'mint' by repairmen.
There are general items, specific items, that can be <I>mended</I> by
<I>menders</I> (think: repairmen).


Quests
------

Quests are basically where you have to ask some guy, get s	ome stuff, ask
some other guy. 

Addendum: you also have to kill certain bad guys. This is solved by having
each of the specific badguys carry an invisible (?) questitem or something
similar.

Addendum: Some quests are repeatable, and some are not. Quests that are repeatable
need not have an attribute set.
Quests are chainable, which means a quest can only be aquired when another
quest has been completed. Quests are in fact linked.

Have questionmarks next to the name of a bot that are clickable. One
questionmark for each quest. -> global change, make all persons return a
'normalname' and a 'clickable name'. The same should go for items.

When monsters die they must respawn in a set interval.

Preconditions for accepting the quest:
- person must not already have the quest (check attribute)
- previous quest must have been complete when this quest is accepted.
- persons level must be >= minlevel
- persons level must be <= maxlevel
- fromperson must be a bot
- toperson must be a bot

A quest table in the database could look like this:
mm_quests : indicates a certain quest to be fulfilled
* questid		int not null
  name          varchar(255) not null
  description   text not null
  minlevel      int,
  maxlevel      int,
  exp           int not null,
  fromperson	varchar(20) not null,
  toperson      varchar(20) not null,
  previousquest	int, (can be null, then a non-chained quest)
  methodname varchar(52), (can be null, thenno script is run on completing the
quest)
  creation
  owner
mm_questitems : indicates how many of which item are needed to complete a
certain quest. 
* itemid		int not null
* questid 		int not null
  amount  		int not null default 1
  visible       int(1) not null default 1
mm_questchar : indicates which persons have completed a certain quest
* questid		int not null
* name 			varchar(20) not null



Ignore lists
------------

Ignore lists are lists containing people that are ignoring other people.
People can add or delete members from their ignorelist.

mm_ignore
	fromperson varchar(20) not null,
	toperson varchar(20) not null,
	foreignkey fromperson -> usertable
	forgeinkey toperson -> usertable

commands:
ignore <person>
acknowledge <person>

Change the output/input methods (messages/personal) to check for
ignoring characters.

Every User character should have a "isBeingIgnoredBy" list. It gets updated
whenever they logon to the game.

It gets changed whenever someone issues an Ignore/Ack command.

communication+mudmail+boards must perform a check before sending to see if the
perosn
is being ignored by the target.

Economy
-------

The economy of a mud is a very important aspect.

Over time, the amount of posessions in the mud is going to increase.
Therefore, inflation will occur. This is a common characteristic to all
mud/mmorpg/mush/moos.

One of the main reasons for a increase in inflation is a direct consequence
of Administration. There are a few ways to curtail the following
occurrences:
- too many items occur
- too powerful/expensive items occur

Both of these are a direct result of improper administration of
Wizards/Deputies/Gods of the mud. It is vital that the administration of the
mud is curtailed by rules/measures.

The following measures can be taken:
- gold/silver/copper cannot be set for an item, it is computed by the worth
of an item
- the worth of an item consists of a combination of factors:
	- how fast does an item deteriorate
	- what level of armour does it provide
	- what level of damage does it provide per second
	- what bonus/buffs does it have
- droprate cannot be set for an item, it is computed by the worth of an
item, droprate is the amount of times the item will be dropped by certain
monsters
- level cannot be set for an item, it is computed by the worth of an item,
level is the level at which the item can be used by a player/bot.
- the aquirement of items is not instantaneous... ALL stuff that can be done
must be done within a defined timeframe. This can differ from 1 second to 1
minute.
- any action taken, interrupts the action in progress

Christmas
=========

How to switch the images over to christmas:

cd /projects/www.karchan.org/public/images/gif/webpic/

cp back4.christmas.gif back4.gif
cp regel1a.christmas.gif regel1a.gif

How to switch back to the usual everyday stuff:

cd /projects/www.karchan.org/public/images/gif/webpic/

cp back4.gif.original back4.gif
cp regel1a.gif.original regel1a.gif

/projects/www.karchan.org/public/images/christmas
/projects/www.karchan.org/public/images/christmas/sant.gif
/projects/www.karchan.org/public/images/christmas/candles_moving.gif
/projects/www.karchan.org/public/images/christmas/noel5.gif
/projects/www.karchan.org/public/images/christmas/noel6.gif
/projects/www.karchan.org/public/images/christmas/noel7.gif
/projects/www.karchan.org/public/images/christmas/Cacand3.gif
/projects/www.karchan.org/public/images/christmas/xbow.gif
/projects/www.karchan.org/public/images/christmas/Cacandle.gif
/projects/www.karchan.org/public/images/christmas/jacko.gif
/projects/www.karchan.org/public/images/christmas/Anixmasc.gif
/projects/www.karchan.org/public/images/christmas/cake.gif
/projects/www.karchan.org/public/images/christmas/santa5.gif
/projects/www.karchan.org/public/images/christmas/shcupid.gif
/projects/www.karchan.org/public/images/christmas/bells.gif
/projects/www.karchan.org/public/images/christmas/wreath7.gif
/projects/www.karchan.org/public/images/christmas/santa_chim.gif
/projects/www.karchan.org/public/images/christmas/wabbit.gif
/projects/www.karchan.org/public/images/christmas/Xmas1a.gif
/projects/www.karchan.org/public/images/christmas/sclaus.gif
/projects/www.karchan.org/public/images/christmas/rab_anm.gif
/projects/www.karchan.org/public/images/christmas/santa_claus.gif
